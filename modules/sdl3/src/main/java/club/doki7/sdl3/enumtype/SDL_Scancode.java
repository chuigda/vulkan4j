package club.doki7.sdl3.enumtype;

import club.doki7.ffm.annotation.*;

/// The SDL keyboard scancode representation.
///
/// An SDL scancode is the physical representation of a key on the keyboard,
/// independent of language and keyboard mapping.
///
/// Values of this type are used to represent keyboard keys, among other places
/// in the `scancode` field of the SDL_KeyboardEvent structure.
///
/// The values in this enumeration are based on the USB usage page standard:
/// https://usb.org/sites/default/files/hut1_5.pdf
///
/// Since: This enum is available since SDL 3.2.0.
///
public final class SDL_Scancode {
    public static final int UNKNOWN = 0x0;

    /// ame Usage page 0x07
    ///
    /// These values are from usage page 0x07 (USB keyboard page).
    public static final int A = 0x4;
    public static final int B = 0x5;
    public static final int C = 0x6;
    public static final int D = 0x7;
    public static final int E = 0x8;
    public static final int F = 0x9;
    public static final int G = 0xa;
    public static final int H = 0xb;
    public static final int I = 0xc;
    public static final int J = 0xd;
    public static final int K = 0xe;
    public static final int L = 0xf;
    public static final int M = 0x10;
    public static final int N = 0x11;
    public static final int O = 0x12;
    public static final int P = 0x13;
    public static final int Q = 0x14;
    public static final int R = 0x15;
    public static final int S = 0x16;
    public static final int T = 0x17;
    public static final int U = 0x18;
    public static final int V = 0x19;
    public static final int W = 0x1a;
    public static final int X = 0x1b;
    public static final int Y = 0x1c;
    public static final int Z = 0x1d;
    public static final int _1 = 0x1e;
    public static final int _2 = 0x1f;
    public static final int _3 = 0x20;
    public static final int _4 = 0x21;
    public static final int _5 = 0x22;
    public static final int _6 = 0x23;
    public static final int _7 = 0x24;
    public static final int _8 = 0x25;
    public static final int _9 = 0x26;
    public static final int _0 = 0x27;
    public static final int RETURN = 0x28;
    public static final int ESCAPE = 0x29;
    public static final int BACKSPACE = 0x2a;
    public static final int TAB = 0x2b;
    public static final int SPACE = 0x2c;
    public static final int MINUS = 0x2d;
    public static final int EQUALS = 0x2e;
    public static final int LEFTBRACKET = 0x2f;
    public static final int RIGHTBRACKET = 0x30;
    public static final int BACKSLASH = 0x31;
    public static final int NONUSHASH = 0x32;
    public static final int SEMICOLON = 0x33;
    public static final int APOSTROPHE = 0x34;
    public static final int GRAVE = 0x35;
    public static final int COMMA = 0x36;
    public static final int PERIOD = 0x37;
    public static final int SLASH = 0x38;
    public static final int CAPSLOCK = 0x39;
    public static final int F1 = 0x3a;
    public static final int F2 = 0x3b;
    public static final int F3 = 0x3c;
    public static final int F4 = 0x3d;
    public static final int F5 = 0x3e;
    public static final int F6 = 0x3f;
    public static final int F7 = 0x40;
    public static final int F8 = 0x41;
    public static final int F9 = 0x42;
    public static final int F10 = 0x43;
    public static final int F11 = 0x44;
    public static final int F12 = 0x45;
    public static final int PRINTSCREEN = 0x46;
    public static final int SCROLLLOCK = 0x47;
    public static final int PAUSE = 0x48;
    public static final int INSERT = 0x49;
    public static final int HOME = 0x4a;
    public static final int PAGEUP = 0x4b;
    public static final int DELETE = 0x4c;
    public static final int END = 0x4d;
    public static final int PAGEDOWN = 0x4e;
    public static final int RIGHT = 0x4f;
    public static final int LEFT = 0x50;
    public static final int DOWN = 0x51;
    public static final int UP = 0x52;
    public static final int NUMLOCKCLEAR = 0x53;
    public static final int KP_DIVIDE = 0x54;
    public static final int KP_MULTIPLY = 0x55;
    public static final int KP_MINUS = 0x56;
    public static final int KP_PLUS = 0x57;
    public static final int KP_ENTER = 0x58;
    public static final int KP_1 = 0x59;
    public static final int KP_2 = 0x5a;
    public static final int KP_3 = 0x5b;
    public static final int KP_4 = 0x5c;
    public static final int KP_5 = 0x5d;
    public static final int KP_6 = 0x5e;
    public static final int KP_7 = 0x5f;
    public static final int KP_8 = 0x60;
    public static final int KP_9 = 0x61;
    public static final int KP_0 = 0x62;
    public static final int KP_PERIOD = 0x63;
    public static final int NONUSBACKSLASH = 0x64;
    public static final int APPLICATION = 0x65;
    public static final int POWER = 0x66;
    public static final int KP_EQUALS = 0x67;
    public static final int F13 = 0x68;
    public static final int F14 = 0x69;
    public static final int F15 = 0x6a;
    public static final int F16 = 0x6b;
    public static final int F17 = 0x6c;
    public static final int F18 = 0x6d;
    public static final int F19 = 0x6e;
    public static final int F20 = 0x6f;
    public static final int F21 = 0x70;
    public static final int F22 = 0x71;
    public static final int F23 = 0x72;
    public static final int F24 = 0x73;
    public static final int EXECUTE = 0x74;
    public static final int HELP = 0x75;
    public static final int MENU = 0x76;
    public static final int SELECT = 0x77;
    public static final int STOP = 0x78;
    public static final int AGAIN = 0x79;
    public static final int UNDO = 0x7a;
    public static final int CUT = 0x7b;
    public static final int COPY = 0x7c;
    public static final int PASTE = 0x7d;
    public static final int FIND = 0x7e;
    public static final int MUTE = 0x7f;
    public static final int VOLUMEUP = 0x80;
    public static final int VOLUMEDOWN = 0x81;
    public static final int KP_COMMA = 0x85;
    public static final int KP_EQUALSAS400 = 0x86;
    public static final int INTERNATIONAL1 = 0x87;
    public static final int INTERNATIONAL2 = 0x88;
    public static final int INTERNATIONAL3 = 0x89;
    public static final int INTERNATIONAL4 = 0x8a;
    public static final int INTERNATIONAL5 = 0x8b;
    public static final int INTERNATIONAL6 = 0x8c;
    public static final int INTERNATIONAL7 = 0x8d;
    public static final int INTERNATIONAL8 = 0x8e;
    public static final int INTERNATIONAL9 = 0x8f;
    public static final int LANG1 = 0x90;
    public static final int LANG2 = 0x91;
    public static final int LANG3 = 0x92;
    public static final int LANG4 = 0x93;
    public static final int LANG5 = 0x94;
    public static final int LANG6 = 0x95;
    public static final int LANG7 = 0x96;
    public static final int LANG8 = 0x97;
    public static final int LANG9 = 0x98;
    public static final int ALTERASE = 0x99;
    public static final int SYSREQ = 0x9a;
    public static final int CANCEL = 0x9b;
    public static final int CLEAR = 0x9c;
    public static final int PRIOR = 0x9d;
    public static final int RETURN2 = 0x9e;
    public static final int SEPARATOR = 0x9f;
    public static final int OUT = 0xa0;
    public static final int OPER = 0xa1;
    public static final int CLEARAGAIN = 0xa2;
    public static final int CRSEL = 0xa3;
    public static final int EXSEL = 0xa4;
    public static final int KP_00 = 0xb0;
    public static final int KP_000 = 0xb1;
    public static final int THOUSANDSSEPARATOR = 0xb2;
    public static final int DECIMALSEPARATOR = 0xb3;
    public static final int CURRENCYUNIT = 0xb4;
    public static final int CURRENCYSUBUNIT = 0xb5;
    public static final int KP_LEFTPAREN = 0xb6;
    public static final int KP_RIGHTPAREN = 0xb7;
    public static final int KP_LEFTBRACE = 0xb8;
    public static final int KP_RIGHTBRACE = 0xb9;
    public static final int KP_TAB = 0xba;
    public static final int KP_BACKSPACE = 0xbb;
    public static final int KP_A = 0xbc;
    public static final int KP_B = 0xbd;
    public static final int KP_C = 0xbe;
    public static final int KP_D = 0xbf;
    public static final int KP_E = 0xc0;
    public static final int KP_F = 0xc1;
    public static final int KP_XOR = 0xc2;
    public static final int KP_POWER = 0xc3;
    public static final int KP_PERCENT = 0xc4;
    public static final int KP_LESS = 0xc5;
    public static final int KP_GREATER = 0xc6;
    public static final int KP_AMPERSAND = 0xc7;
    public static final int KP_DBLAMPERSAND = 0xc8;
    public static final int KP_VERTICALBAR = 0xc9;
    public static final int KP_DBLVERTICALBAR = 0xca;
    public static final int KP_COLON = 0xcb;
    public static final int KP_HASH = 0xcc;
    public static final int KP_SPACE = 0xcd;
    public static final int KP_AT = 0xce;
    public static final int KP_EXCLAM = 0xcf;
    public static final int KP_MEMSTORE = 0xd0;
    public static final int KP_MEMRECALL = 0xd1;
    public static final int KP_MEMCLEAR = 0xd2;
    public static final int KP_MEMADD = 0xd3;
    public static final int KP_MEMSUBTRACT = 0xd4;
    public static final int KP_MEMMULTIPLY = 0xd5;
    public static final int KP_MEMDIVIDE = 0xd6;
    public static final int KP_PLUSMINUS = 0xd7;
    public static final int KP_CLEAR = 0xd8;
    public static final int KP_CLEARENTRY = 0xd9;
    public static final int KP_BINARY = 0xda;
    public static final int KP_OCTAL = 0xdb;
    public static final int KP_DECIMAL = 0xdc;
    public static final int KP_HEXADECIMAL = 0xdd;
    public static final int LCTRL = 0xe0;
    public static final int LSHIFT = 0xe1;
    public static final int LALT = 0xe2;
    public static final int LGUI = 0xe3;
    public static final int RCTRL = 0xe4;
    public static final int RSHIFT = 0xe5;
    public static final int RALT = 0xe6;
    public static final int RGUI = 0xe7;
    public static final int MODE = 0x101;

    /// ame Usage page 0x0C
    ///
    /// These values are mapped from usage page 0x0C (USB consumer page).
    ///
    /// There are way more keys in the spec than we can represent in the
    /// current scancode range, so pick the ones that commonly come up in
    /// real world usage.
    public static final int SLEEP = 0x102;
    public static final int WAKE = 0x103;
    public static final int CHANNEL_INCREMENT = 0x104;
    public static final int CHANNEL_DECREMENT = 0x105;
    public static final int MEDIA_PLAY = 0x106;
    public static final int MEDIA_PAUSE = 0x107;
    public static final int MEDIA_RECORD = 0x108;
    public static final int MEDIA_FAST_FORWARD = 0x109;
    public static final int MEDIA_REWIND = 0x10a;
    public static final int MEDIA_NEXT_TRACK = 0x10b;
    public static final int MEDIA_PREVIOUS_TRACK = 0x10c;
    public static final int MEDIA_STOP = 0x10d;
    public static final int MEDIA_EJECT = 0x10e;
    public static final int MEDIA_PLAY_PAUSE = 0x10f;
    public static final int MEDIA_SELECT = 0x110;
    public static final int AC_NEW = 0x111;
    public static final int AC_OPEN = 0x112;
    public static final int AC_CLOSE = 0x113;
    public static final int AC_EXIT = 0x114;
    public static final int AC_SAVE = 0x115;
    public static final int AC_PRINT = 0x116;
    public static final int AC_PROPERTIES = 0x117;
    public static final int AC_SEARCH = 0x118;
    public static final int AC_HOME = 0x119;
    public static final int AC_BACK = 0x11a;
    public static final int AC_FORWARD = 0x11b;
    public static final int AC_STOP = 0x11c;
    public static final int AC_REFRESH = 0x11d;
    public static final int AC_BOOKMARKS = 0x11e;

    /// ame Mobile keys
    ///
    /// These are values that are often used on mobile phones.
    public static final int SOFTLEFT = 0x11f;
    public static final int SOFTRIGHT = 0x120;
    public static final int CALL = 0x121;
    public static final int ENDCALL = 0x122;
    public static final int RESERVED = 0x190;
    public static final int COUNT = 0x200;

    public static String explain(@EnumType(SDL_Scancode.class) int value) {
        return switch (value) {
            case SDL_Scancode._0 -> "SDL_SCANCODE_0";
            case SDL_Scancode._1 -> "SDL_SCANCODE_1";
            case SDL_Scancode._2 -> "SDL_SCANCODE_2";
            case SDL_Scancode._3 -> "SDL_SCANCODE_3";
            case SDL_Scancode._4 -> "SDL_SCANCODE_4";
            case SDL_Scancode._5 -> "SDL_SCANCODE_5";
            case SDL_Scancode._6 -> "SDL_SCANCODE_6";
            case SDL_Scancode._7 -> "SDL_SCANCODE_7";
            case SDL_Scancode._8 -> "SDL_SCANCODE_8";
            case SDL_Scancode._9 -> "SDL_SCANCODE_9";
            case SDL_Scancode.A -> "SDL_SCANCODE_A";
            case SDL_Scancode.AC_BACK -> "SDL_SCANCODE_AC_BACK";
            case SDL_Scancode.AC_BOOKMARKS -> "SDL_SCANCODE_AC_BOOKMARKS";
            case SDL_Scancode.AC_CLOSE -> "SDL_SCANCODE_AC_CLOSE";
            case SDL_Scancode.AC_EXIT -> "SDL_SCANCODE_AC_EXIT";
            case SDL_Scancode.AC_FORWARD -> "SDL_SCANCODE_AC_FORWARD";
            case SDL_Scancode.AC_HOME -> "SDL_SCANCODE_AC_HOME";
            case SDL_Scancode.AC_NEW -> "SDL_SCANCODE_AC_NEW";
            case SDL_Scancode.AC_OPEN -> "SDL_SCANCODE_AC_OPEN";
            case SDL_Scancode.AC_PRINT -> "SDL_SCANCODE_AC_PRINT";
            case SDL_Scancode.AC_PROPERTIES -> "SDL_SCANCODE_AC_PROPERTIES";
            case SDL_Scancode.AC_REFRESH -> "SDL_SCANCODE_AC_REFRESH";
            case SDL_Scancode.AC_SAVE -> "SDL_SCANCODE_AC_SAVE";
            case SDL_Scancode.AC_SEARCH -> "SDL_SCANCODE_AC_SEARCH";
            case SDL_Scancode.AC_STOP -> "SDL_SCANCODE_AC_STOP";
            case SDL_Scancode.AGAIN -> "SDL_SCANCODE_AGAIN";
            case SDL_Scancode.ALTERASE -> "SDL_SCANCODE_ALTERASE";
            case SDL_Scancode.APOSTROPHE -> "SDL_SCANCODE_APOSTROPHE";
            case SDL_Scancode.APPLICATION -> "SDL_SCANCODE_APPLICATION";
            case SDL_Scancode.B -> "SDL_SCANCODE_B";
            case SDL_Scancode.BACKSLASH -> "SDL_SCANCODE_BACKSLASH";
            case SDL_Scancode.BACKSPACE -> "SDL_SCANCODE_BACKSPACE";
            case SDL_Scancode.C -> "SDL_SCANCODE_C";
            case SDL_Scancode.CALL -> "SDL_SCANCODE_CALL";
            case SDL_Scancode.CANCEL -> "SDL_SCANCODE_CANCEL";
            case SDL_Scancode.CAPSLOCK -> "SDL_SCANCODE_CAPSLOCK";
            case SDL_Scancode.CHANNEL_DECREMENT -> "SDL_SCANCODE_CHANNEL_DECREMENT";
            case SDL_Scancode.CHANNEL_INCREMENT -> "SDL_SCANCODE_CHANNEL_INCREMENT";
            case SDL_Scancode.CLEAR -> "SDL_SCANCODE_CLEAR";
            case SDL_Scancode.CLEARAGAIN -> "SDL_SCANCODE_CLEARAGAIN";
            case SDL_Scancode.COMMA -> "SDL_SCANCODE_COMMA";
            case SDL_Scancode.COPY -> "SDL_SCANCODE_COPY";
            case SDL_Scancode.COUNT -> "SDL_SCANCODE_COUNT";
            case SDL_Scancode.CRSEL -> "SDL_SCANCODE_CRSEL";
            case SDL_Scancode.CURRENCYSUBUNIT -> "SDL_SCANCODE_CURRENCYSUBUNIT";
            case SDL_Scancode.CURRENCYUNIT -> "SDL_SCANCODE_CURRENCYUNIT";
            case SDL_Scancode.CUT -> "SDL_SCANCODE_CUT";
            case SDL_Scancode.D -> "SDL_SCANCODE_D";
            case SDL_Scancode.DECIMALSEPARATOR -> "SDL_SCANCODE_DECIMALSEPARATOR";
            case SDL_Scancode.DELETE -> "SDL_SCANCODE_DELETE";
            case SDL_Scancode.DOWN -> "SDL_SCANCODE_DOWN";
            case SDL_Scancode.E -> "SDL_SCANCODE_E";
            case SDL_Scancode.END -> "SDL_SCANCODE_END";
            case SDL_Scancode.ENDCALL -> "SDL_SCANCODE_ENDCALL";
            case SDL_Scancode.EQUALS -> "SDL_SCANCODE_EQUALS";
            case SDL_Scancode.ESCAPE -> "SDL_SCANCODE_ESCAPE";
            case SDL_Scancode.EXECUTE -> "SDL_SCANCODE_EXECUTE";
            case SDL_Scancode.EXSEL -> "SDL_SCANCODE_EXSEL";
            case SDL_Scancode.F -> "SDL_SCANCODE_F";
            case SDL_Scancode.F1 -> "SDL_SCANCODE_F1";
            case SDL_Scancode.F10 -> "SDL_SCANCODE_F10";
            case SDL_Scancode.F11 -> "SDL_SCANCODE_F11";
            case SDL_Scancode.F12 -> "SDL_SCANCODE_F12";
            case SDL_Scancode.F13 -> "SDL_SCANCODE_F13";
            case SDL_Scancode.F14 -> "SDL_SCANCODE_F14";
            case SDL_Scancode.F15 -> "SDL_SCANCODE_F15";
            case SDL_Scancode.F16 -> "SDL_SCANCODE_F16";
            case SDL_Scancode.F17 -> "SDL_SCANCODE_F17";
            case SDL_Scancode.F18 -> "SDL_SCANCODE_F18";
            case SDL_Scancode.F19 -> "SDL_SCANCODE_F19";
            case SDL_Scancode.F2 -> "SDL_SCANCODE_F2";
            case SDL_Scancode.F20 -> "SDL_SCANCODE_F20";
            case SDL_Scancode.F21 -> "SDL_SCANCODE_F21";
            case SDL_Scancode.F22 -> "SDL_SCANCODE_F22";
            case SDL_Scancode.F23 -> "SDL_SCANCODE_F23";
            case SDL_Scancode.F24 -> "SDL_SCANCODE_F24";
            case SDL_Scancode.F3 -> "SDL_SCANCODE_F3";
            case SDL_Scancode.F4 -> "SDL_SCANCODE_F4";
            case SDL_Scancode.F5 -> "SDL_SCANCODE_F5";
            case SDL_Scancode.F6 -> "SDL_SCANCODE_F6";
            case SDL_Scancode.F7 -> "SDL_SCANCODE_F7";
            case SDL_Scancode.F8 -> "SDL_SCANCODE_F8";
            case SDL_Scancode.F9 -> "SDL_SCANCODE_F9";
            case SDL_Scancode.FIND -> "SDL_SCANCODE_FIND";
            case SDL_Scancode.G -> "SDL_SCANCODE_G";
            case SDL_Scancode.GRAVE -> "SDL_SCANCODE_GRAVE";
            case SDL_Scancode.H -> "SDL_SCANCODE_H";
            case SDL_Scancode.HELP -> "SDL_SCANCODE_HELP";
            case SDL_Scancode.HOME -> "SDL_SCANCODE_HOME";
            case SDL_Scancode.I -> "SDL_SCANCODE_I";
            case SDL_Scancode.INSERT -> "SDL_SCANCODE_INSERT";
            case SDL_Scancode.INTERNATIONAL1 -> "SDL_SCANCODE_INTERNATIONAL1";
            case SDL_Scancode.INTERNATIONAL2 -> "SDL_SCANCODE_INTERNATIONAL2";
            case SDL_Scancode.INTERNATIONAL3 -> "SDL_SCANCODE_INTERNATIONAL3";
            case SDL_Scancode.INTERNATIONAL4 -> "SDL_SCANCODE_INTERNATIONAL4";
            case SDL_Scancode.INTERNATIONAL5 -> "SDL_SCANCODE_INTERNATIONAL5";
            case SDL_Scancode.INTERNATIONAL6 -> "SDL_SCANCODE_INTERNATIONAL6";
            case SDL_Scancode.INTERNATIONAL7 -> "SDL_SCANCODE_INTERNATIONAL7";
            case SDL_Scancode.INTERNATIONAL8 -> "SDL_SCANCODE_INTERNATIONAL8";
            case SDL_Scancode.INTERNATIONAL9 -> "SDL_SCANCODE_INTERNATIONAL9";
            case SDL_Scancode.J -> "SDL_SCANCODE_J";
            case SDL_Scancode.K -> "SDL_SCANCODE_K";
            case SDL_Scancode.KP_0 -> "SDL_SCANCODE_KP_0";
            case SDL_Scancode.KP_00 -> "SDL_SCANCODE_KP_00";
            case SDL_Scancode.KP_000 -> "SDL_SCANCODE_KP_000";
            case SDL_Scancode.KP_1 -> "SDL_SCANCODE_KP_1";
            case SDL_Scancode.KP_2 -> "SDL_SCANCODE_KP_2";
            case SDL_Scancode.KP_3 -> "SDL_SCANCODE_KP_3";
            case SDL_Scancode.KP_4 -> "SDL_SCANCODE_KP_4";
            case SDL_Scancode.KP_5 -> "SDL_SCANCODE_KP_5";
            case SDL_Scancode.KP_6 -> "SDL_SCANCODE_KP_6";
            case SDL_Scancode.KP_7 -> "SDL_SCANCODE_KP_7";
            case SDL_Scancode.KP_8 -> "SDL_SCANCODE_KP_8";
            case SDL_Scancode.KP_9 -> "SDL_SCANCODE_KP_9";
            case SDL_Scancode.KP_A -> "SDL_SCANCODE_KP_A";
            case SDL_Scancode.KP_AMPERSAND -> "SDL_SCANCODE_KP_AMPERSAND";
            case SDL_Scancode.KP_AT -> "SDL_SCANCODE_KP_AT";
            case SDL_Scancode.KP_B -> "SDL_SCANCODE_KP_B";
            case SDL_Scancode.KP_BACKSPACE -> "SDL_SCANCODE_KP_BACKSPACE";
            case SDL_Scancode.KP_BINARY -> "SDL_SCANCODE_KP_BINARY";
            case SDL_Scancode.KP_C -> "SDL_SCANCODE_KP_C";
            case SDL_Scancode.KP_CLEAR -> "SDL_SCANCODE_KP_CLEAR";
            case SDL_Scancode.KP_CLEARENTRY -> "SDL_SCANCODE_KP_CLEARENTRY";
            case SDL_Scancode.KP_COLON -> "SDL_SCANCODE_KP_COLON";
            case SDL_Scancode.KP_COMMA -> "SDL_SCANCODE_KP_COMMA";
            case SDL_Scancode.KP_D -> "SDL_SCANCODE_KP_D";
            case SDL_Scancode.KP_DBLAMPERSAND -> "SDL_SCANCODE_KP_DBLAMPERSAND";
            case SDL_Scancode.KP_DBLVERTICALBAR -> "SDL_SCANCODE_KP_DBLVERTICALBAR";
            case SDL_Scancode.KP_DECIMAL -> "SDL_SCANCODE_KP_DECIMAL";
            case SDL_Scancode.KP_DIVIDE -> "SDL_SCANCODE_KP_DIVIDE";
            case SDL_Scancode.KP_E -> "SDL_SCANCODE_KP_E";
            case SDL_Scancode.KP_ENTER -> "SDL_SCANCODE_KP_ENTER";
            case SDL_Scancode.KP_EQUALS -> "SDL_SCANCODE_KP_EQUALS";
            case SDL_Scancode.KP_EQUALSAS400 -> "SDL_SCANCODE_KP_EQUALSAS400";
            case SDL_Scancode.KP_EXCLAM -> "SDL_SCANCODE_KP_EXCLAM";
            case SDL_Scancode.KP_F -> "SDL_SCANCODE_KP_F";
            case SDL_Scancode.KP_GREATER -> "SDL_SCANCODE_KP_GREATER";
            case SDL_Scancode.KP_HASH -> "SDL_SCANCODE_KP_HASH";
            case SDL_Scancode.KP_HEXADECIMAL -> "SDL_SCANCODE_KP_HEXADECIMAL";
            case SDL_Scancode.KP_LEFTBRACE -> "SDL_SCANCODE_KP_LEFTBRACE";
            case SDL_Scancode.KP_LEFTPAREN -> "SDL_SCANCODE_KP_LEFTPAREN";
            case SDL_Scancode.KP_LESS -> "SDL_SCANCODE_KP_LESS";
            case SDL_Scancode.KP_MEMADD -> "SDL_SCANCODE_KP_MEMADD";
            case SDL_Scancode.KP_MEMCLEAR -> "SDL_SCANCODE_KP_MEMCLEAR";
            case SDL_Scancode.KP_MEMDIVIDE -> "SDL_SCANCODE_KP_MEMDIVIDE";
            case SDL_Scancode.KP_MEMMULTIPLY -> "SDL_SCANCODE_KP_MEMMULTIPLY";
            case SDL_Scancode.KP_MEMRECALL -> "SDL_SCANCODE_KP_MEMRECALL";
            case SDL_Scancode.KP_MEMSTORE -> "SDL_SCANCODE_KP_MEMSTORE";
            case SDL_Scancode.KP_MEMSUBTRACT -> "SDL_SCANCODE_KP_MEMSUBTRACT";
            case SDL_Scancode.KP_MINUS -> "SDL_SCANCODE_KP_MINUS";
            case SDL_Scancode.KP_MULTIPLY -> "SDL_SCANCODE_KP_MULTIPLY";
            case SDL_Scancode.KP_OCTAL -> "SDL_SCANCODE_KP_OCTAL";
            case SDL_Scancode.KP_PERCENT -> "SDL_SCANCODE_KP_PERCENT";
            case SDL_Scancode.KP_PERIOD -> "SDL_SCANCODE_KP_PERIOD";
            case SDL_Scancode.KP_PLUS -> "SDL_SCANCODE_KP_PLUS";
            case SDL_Scancode.KP_PLUSMINUS -> "SDL_SCANCODE_KP_PLUSMINUS";
            case SDL_Scancode.KP_POWER -> "SDL_SCANCODE_KP_POWER";
            case SDL_Scancode.KP_RIGHTBRACE -> "SDL_SCANCODE_KP_RIGHTBRACE";
            case SDL_Scancode.KP_RIGHTPAREN -> "SDL_SCANCODE_KP_RIGHTPAREN";
            case SDL_Scancode.KP_SPACE -> "SDL_SCANCODE_KP_SPACE";
            case SDL_Scancode.KP_TAB -> "SDL_SCANCODE_KP_TAB";
            case SDL_Scancode.KP_VERTICALBAR -> "SDL_SCANCODE_KP_VERTICALBAR";
            case SDL_Scancode.KP_XOR -> "SDL_SCANCODE_KP_XOR";
            case SDL_Scancode.L -> "SDL_SCANCODE_L";
            case SDL_Scancode.LALT -> "SDL_SCANCODE_LALT";
            case SDL_Scancode.LANG1 -> "SDL_SCANCODE_LANG1";
            case SDL_Scancode.LANG2 -> "SDL_SCANCODE_LANG2";
            case SDL_Scancode.LANG3 -> "SDL_SCANCODE_LANG3";
            case SDL_Scancode.LANG4 -> "SDL_SCANCODE_LANG4";
            case SDL_Scancode.LANG5 -> "SDL_SCANCODE_LANG5";
            case SDL_Scancode.LANG6 -> "SDL_SCANCODE_LANG6";
            case SDL_Scancode.LANG7 -> "SDL_SCANCODE_LANG7";
            case SDL_Scancode.LANG8 -> "SDL_SCANCODE_LANG8";
            case SDL_Scancode.LANG9 -> "SDL_SCANCODE_LANG9";
            case SDL_Scancode.LCTRL -> "SDL_SCANCODE_LCTRL";
            case SDL_Scancode.LEFT -> "SDL_SCANCODE_LEFT";
            case SDL_Scancode.LEFTBRACKET -> "SDL_SCANCODE_LEFTBRACKET";
            case SDL_Scancode.LGUI -> "SDL_SCANCODE_LGUI";
            case SDL_Scancode.LSHIFT -> "SDL_SCANCODE_LSHIFT";
            case SDL_Scancode.M -> "SDL_SCANCODE_M";
            case SDL_Scancode.MEDIA_EJECT -> "SDL_SCANCODE_MEDIA_EJECT";
            case SDL_Scancode.MEDIA_FAST_FORWARD -> "SDL_SCANCODE_MEDIA_FAST_FORWARD";
            case SDL_Scancode.MEDIA_NEXT_TRACK -> "SDL_SCANCODE_MEDIA_NEXT_TRACK";
            case SDL_Scancode.MEDIA_PAUSE -> "SDL_SCANCODE_MEDIA_PAUSE";
            case SDL_Scancode.MEDIA_PLAY -> "SDL_SCANCODE_MEDIA_PLAY";
            case SDL_Scancode.MEDIA_PLAY_PAUSE -> "SDL_SCANCODE_MEDIA_PLAY_PAUSE";
            case SDL_Scancode.MEDIA_PREVIOUS_TRACK -> "SDL_SCANCODE_MEDIA_PREVIOUS_TRACK";
            case SDL_Scancode.MEDIA_RECORD -> "SDL_SCANCODE_MEDIA_RECORD";
            case SDL_Scancode.MEDIA_REWIND -> "SDL_SCANCODE_MEDIA_REWIND";
            case SDL_Scancode.MEDIA_SELECT -> "SDL_SCANCODE_MEDIA_SELECT";
            case SDL_Scancode.MEDIA_STOP -> "SDL_SCANCODE_MEDIA_STOP";
            case SDL_Scancode.MENU -> "SDL_SCANCODE_MENU";
            case SDL_Scancode.MINUS -> "SDL_SCANCODE_MINUS";
            case SDL_Scancode.MODE -> "SDL_SCANCODE_MODE";
            case SDL_Scancode.MUTE -> "SDL_SCANCODE_MUTE";
            case SDL_Scancode.N -> "SDL_SCANCODE_N";
            case SDL_Scancode.NONUSBACKSLASH -> "SDL_SCANCODE_NONUSBACKSLASH";
            case SDL_Scancode.NONUSHASH -> "SDL_SCANCODE_NONUSHASH";
            case SDL_Scancode.NUMLOCKCLEAR -> "SDL_SCANCODE_NUMLOCKCLEAR";
            case SDL_Scancode.O -> "SDL_SCANCODE_O";
            case SDL_Scancode.OPER -> "SDL_SCANCODE_OPER";
            case SDL_Scancode.OUT -> "SDL_SCANCODE_OUT";
            case SDL_Scancode.P -> "SDL_SCANCODE_P";
            case SDL_Scancode.PAGEDOWN -> "SDL_SCANCODE_PAGEDOWN";
            case SDL_Scancode.PAGEUP -> "SDL_SCANCODE_PAGEUP";
            case SDL_Scancode.PASTE -> "SDL_SCANCODE_PASTE";
            case SDL_Scancode.PAUSE -> "SDL_SCANCODE_PAUSE";
            case SDL_Scancode.PERIOD -> "SDL_SCANCODE_PERIOD";
            case SDL_Scancode.POWER -> "SDL_SCANCODE_POWER";
            case SDL_Scancode.PRINTSCREEN -> "SDL_SCANCODE_PRINTSCREEN";
            case SDL_Scancode.PRIOR -> "SDL_SCANCODE_PRIOR";
            case SDL_Scancode.Q -> "SDL_SCANCODE_Q";
            case SDL_Scancode.R -> "SDL_SCANCODE_R";
            case SDL_Scancode.RALT -> "SDL_SCANCODE_RALT";
            case SDL_Scancode.RCTRL -> "SDL_SCANCODE_RCTRL";
            case SDL_Scancode.RESERVED -> "SDL_SCANCODE_RESERVED";
            case SDL_Scancode.RETURN -> "SDL_SCANCODE_RETURN";
            case SDL_Scancode.RETURN2 -> "SDL_SCANCODE_RETURN2";
            case SDL_Scancode.RGUI -> "SDL_SCANCODE_RGUI";
            case SDL_Scancode.RIGHT -> "SDL_SCANCODE_RIGHT";
            case SDL_Scancode.RIGHTBRACKET -> "SDL_SCANCODE_RIGHTBRACKET";
            case SDL_Scancode.RSHIFT -> "SDL_SCANCODE_RSHIFT";
            case SDL_Scancode.S -> "SDL_SCANCODE_S";
            case SDL_Scancode.SCROLLLOCK -> "SDL_SCANCODE_SCROLLLOCK";
            case SDL_Scancode.SELECT -> "SDL_SCANCODE_SELECT";
            case SDL_Scancode.SEMICOLON -> "SDL_SCANCODE_SEMICOLON";
            case SDL_Scancode.SEPARATOR -> "SDL_SCANCODE_SEPARATOR";
            case SDL_Scancode.SLASH -> "SDL_SCANCODE_SLASH";
            case SDL_Scancode.SLEEP -> "SDL_SCANCODE_SLEEP";
            case SDL_Scancode.SOFTLEFT -> "SDL_SCANCODE_SOFTLEFT";
            case SDL_Scancode.SOFTRIGHT -> "SDL_SCANCODE_SOFTRIGHT";
            case SDL_Scancode.SPACE -> "SDL_SCANCODE_SPACE";
            case SDL_Scancode.STOP -> "SDL_SCANCODE_STOP";
            case SDL_Scancode.SYSREQ -> "SDL_SCANCODE_SYSREQ";
            case SDL_Scancode.T -> "SDL_SCANCODE_T";
            case SDL_Scancode.TAB -> "SDL_SCANCODE_TAB";
            case SDL_Scancode.THOUSANDSSEPARATOR -> "SDL_SCANCODE_THOUSANDSSEPARATOR";
            case SDL_Scancode.U -> "SDL_SCANCODE_U";
            case SDL_Scancode.UNDO -> "SDL_SCANCODE_UNDO";
            case SDL_Scancode.UNKNOWN -> "SDL_SCANCODE_UNKNOWN";
            case SDL_Scancode.UP -> "SDL_SCANCODE_UP";
            case SDL_Scancode.V -> "SDL_SCANCODE_V";
            case SDL_Scancode.VOLUMEDOWN -> "SDL_SCANCODE_VOLUMEDOWN";
            case SDL_Scancode.VOLUMEUP -> "SDL_SCANCODE_VOLUMEUP";
            case SDL_Scancode.W -> "SDL_SCANCODE_W";
            case SDL_Scancode.WAKE -> "SDL_SCANCODE_WAKE";
            case SDL_Scancode.X -> "SDL_SCANCODE_X";
            case SDL_Scancode.Y -> "SDL_SCANCODE_Y";
            case SDL_Scancode.Z -> "SDL_SCANCODE_Z";
            default -> "UNKNOWN(" + value + ")";
        };
    }

    /// Constructing this class is nonsense so the constructor is made private.
    private SDL_Scancode() {}
}
