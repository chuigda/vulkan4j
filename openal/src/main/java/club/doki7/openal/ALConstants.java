package club.doki7.openal;

import club.doki7.ffm.annotation.*;

public interface ALConstants {
    int _5POINT1_16_SOFT = 0x120B;
    int _5POINT1_32F_SOFT = 0x120C;
    int _5POINT1_8_SOFT = 0x120A;
    int _5POINT1_SOFT = 0x1504;
    int _6POINT1_16_SOFT = 0x120E;
    int _6POINT1_32F_SOFT = 0x120F;
    int _6POINT1_8_SOFT = 0x120D;
    int _6POINT1_SOFT = 0x1505;
    int _7POINT1_16_SOFT = 0x1211;
    int _7POINT1_32F_SOFT = 0x1212;
    int _7POINT1_8_SOFT = 0x1210;
    int _7POINT1_SOFT = 0x1506;
    int ACN_SOFT = 0x0001;
    int AIR_ABSORPTION_FACTOR = 0x20007;
    int AMBISONIC_LAYOUT_SOFT = 0x1997;
    int AMBISONIC_SCALING_SOFT = 0x1998;
    int AUTOWAH_ATTACK_TIME = 0x0001;
    int AUTOWAH_PEAK_GAIN = 0x0004;
    int AUTOWAH_RELEASE_TIME = 0x0002;
    int AUTOWAH_RESONANCE = 0x0003;
    int AUTO_SOFT = 0x0002;
    int AUXILIARY_EFFECT_SLOT_EXT = 0x19D3;
    int AUXILIARY_SEND_FILTER = 0x20006;
    int AUXILIARY_SEND_FILTER_GAINHF_AUTO = 0x2000C;
    int AUXILIARY_SEND_FILTER_GAIN_AUTO = 0x2000B;
    int BANDPASS_GAIN = 0x0001;
    int BANDPASS_GAINHF = 0x0003;
    int BANDPASS_GAINLF = 0x0002;
    int BITS = 0x2002;
    int BUFFER = 0x1009;
    int BUFFERS_PROCESSED = 0x1016;
    int BUFFERS_QUEUED = 0x1015;
    int BUFFER_CALLBACK_FUNCTION_SOFT = 0x19A0;
    int BUFFER_CALLBACK_USER_PARAM_SOFT = 0x19A1;
    int BYTE3_SOFT = 0x1408;
    int BYTE_LENGTH_SOFT = 0x2009;
    int BYTE_OFFSET = 0x1026;
    int BYTE_RW_OFFSETS_SOFT = 0x1031;
    int BYTE_SOFT = 0x1400;
    int CHANNELS = 0x2003;
    int CHORUS_DELAY = 0x0006;
    int CHORUS_DEPTH = 0x0004;
    int CHORUS_FEEDBACK = 0x0005;
    int CHORUS_PHASE = 0x0002;
    int CHORUS_RATE = 0x0003;
    int CHORUS_WAVEFORM = 0x0001;
    int COMPRESSOR_ONOFF = 0x0001;
    int CONE_INNER_ANGLE = 0x1001;
    int CONE_OUTER_ANGLE = 0x1002;
    int CONE_OUTER_GAIN = 0x1022;
    int CONE_OUTER_GAINHF = 0x20009;
    int CONTEXT_FLAGS_EXT = 0x19CF;
    int DEBUG_CALLBACK_FUNCTION_EXT = 0x19B3;
    int DEBUG_CALLBACK_USER_PARAM_EXT = 0x19B4;
    int DEBUG_LOGGED_MESSAGES_EXT = 0x19C7;
    int DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_EXT = 0x19C8;
    int DEBUG_OUTPUT_EXT = 0x19B2;
    int DEBUG_SEVERITY_HIGH_EXT = 0x19C3;
    int DEBUG_SEVERITY_LOW_EXT = 0x19C5;
    int DEBUG_SEVERITY_MEDIUM_EXT = 0x19C4;
    int DEBUG_SEVERITY_NOTIFICATION_EXT = 0x19C6;
    int DEBUG_SOURCE_API_EXT = 0x19B5;
    int DEBUG_SOURCE_APPLICATION_EXT = 0x19B8;
    int DEBUG_SOURCE_AUDIO_SYSTEM_EXT = 0x19B6;
    int DEBUG_SOURCE_OTHER_EXT = 0x19B9;
    int DEBUG_SOURCE_THIRD_PARTY_EXT = 0x19B7;
    int DEBUG_TYPE_DEPRECATED_BEHAVIOR_EXT = 0x19BB;
    int DEBUG_TYPE_ERROR_EXT = 0x19BA;
    int DEBUG_TYPE_MARKER_EXT = 0x19BF;
    int DEBUG_TYPE_OTHER_EXT = 0x19C2;
    int DEBUG_TYPE_PERFORMANCE_EXT = 0x19BE;
    int DEBUG_TYPE_POP_GROUP_EXT = 0x19C1;
    int DEBUG_TYPE_PORTABILITY_EXT = 0x19BD;
    int DEBUG_TYPE_PUSH_GROUP_EXT = 0x19C0;
    int DEBUG_TYPE_UNDEFINED_BEHAVIOR_EXT = 0x19BC;
    int DEDICATED_GAIN = 0x0001;
    int DEFAULT_RESAMPLER_SOFT = 0x1211;
    int DEFERRED_UPDATES_SOFT = 0xC002;
    int DIRECTION = 0x1005;
    int DIRECT_CHANNELS_SOFT = 0x1033;
    int DIRECT_FILTER = 0x20005;
    int DIRECT_FILTER_GAINHF_AUTO = 0x2000A;
    int DISTANCE_MODEL = 0xD000;
    int DISTORTION_EDGE = 0x0001;
    int DISTORTION_EQBANDWIDTH = 0x0005;
    int DISTORTION_EQCENTER = 0x0004;
    int DISTORTION_GAIN = 0x0002;
    int DISTORTION_LOWPASS_CUTOFF = 0x0003;
    int DONT_CARE_EXT = 0x0002;
    int DOPPLER_FACTOR = 0xC000;
    int DOPPLER_VELOCITY = 0xC001;
    int DOUBLE_SOFT = 0x1407;
    int DROP_UNMATCHED_SOFT = 0x0001;
    int EAXREVERB_AIR_ABSORPTION_GAINHF = 0x0013;
    int EAXREVERB_DECAY_HFLIMIT = 0x0017;
    int EAXREVERB_DECAY_HFRATIO = 0x0007;
    int EAXREVERB_DECAY_LFRATIO = 0x0008;
    int EAXREVERB_DECAY_TIME = 0x0006;
    int EAXREVERB_DENSITY = 0x0001;
    int EAXREVERB_DIFFUSION = 0x0002;
    int EAXREVERB_ECHO_DEPTH = 0x0010;
    int EAXREVERB_ECHO_TIME = 0x000F;
    int EAXREVERB_GAIN = 0x0003;
    int EAXREVERB_GAINHF = 0x0004;
    int EAXREVERB_GAINLF = 0x0005;
    int EAXREVERB_HFREFERENCE = 0x0014;
    int EAXREVERB_LATE_REVERB_DELAY = 0x000D;
    int EAXREVERB_LATE_REVERB_GAIN = 0x000C;
    int EAXREVERB_LATE_REVERB_PAN = 0x000E;
    int EAXREVERB_LFREFERENCE = 0x0015;
    int EAXREVERB_MODULATION_DEPTH = 0x0012;
    int EAXREVERB_MODULATION_TIME = 0x0011;
    int EAXREVERB_REFLECTIONS_DELAY = 0x000A;
    int EAXREVERB_REFLECTIONS_GAIN = 0x0009;
    int EAXREVERB_REFLECTIONS_PAN = 0x000B;
    int EAXREVERB_ROOM_ROLLOFF_FACTOR = 0x0016;
    int ECHO_DAMPING = 0x0003;
    int ECHO_DELAY = 0x0001;
    int ECHO_FEEDBACK = 0x0004;
    int ECHO_LRDELAY = 0x0002;
    int ECHO_SPREAD = 0x0005;
    int EFFECTSLOT_AUXILIARY_SEND_AUTO = 0x0003;
    int EFFECTSLOT_EFFECT = 0x0001;
    int EFFECTSLOT_GAIN = 0x0002;
    int EFFECTSLOT_NULL = 0x0000;
    int EFFECTSLOT_TARGET_SOFT = 0x199C;
    int EFFECT_AUTOWAH = 0x000A;
    int EFFECT_CHORUS = 0x0002;
    int EFFECT_COMPRESSOR = 0x000B;
    int EFFECT_DEDICATED_DIALOGUE = 0x9001;
    int EFFECT_DEDICATED_LOW_FREQUENCY_EFFECT = 0x9000;
    int EFFECT_DISTORTION = 0x0003;
    int EFFECT_EAXREVERB = 0x8000;
    int EFFECT_ECHO = 0x0004;
    int EFFECT_EQUALIZER = 0x000C;
    int EFFECT_EXT = 0x19D2;
    int EFFECT_FIRST_PARAMETER = 0x0000;
    int EFFECT_FLANGER = 0x0005;
    int EFFECT_FREQUENCY_SHIFTER = 0x0006;
    int EFFECT_LAST_PARAMETER = 0x8000;
    int EFFECT_NULL = 0x0000;
    int EFFECT_PITCH_SHIFTER = 0x0008;
    int EFFECT_REVERB = 0x0001;
    int EFFECT_RING_MODULATOR = 0x0009;
    int EFFECT_TYPE = 0x8001;
    int EFFECT_VOCAL_MORPHER = 0x0007;
    int EQUALIZER_HIGH_CUTOFF = 0x000A;
    int EQUALIZER_HIGH_GAIN = 0x0009;
    int EQUALIZER_LOW_CUTOFF = 0x0002;
    int EQUALIZER_LOW_GAIN = 0x0001;
    int EQUALIZER_MID1_CENTER = 0x0004;
    int EQUALIZER_MID1_GAIN = 0x0003;
    int EQUALIZER_MID1_WIDTH = 0x0005;
    int EQUALIZER_MID2_CENTER = 0x0007;
    int EQUALIZER_MID2_GAIN = 0x0006;
    int EQUALIZER_MID2_WIDTH = 0x0008;
    int EVENT_CALLBACK_FUNCTION_SOFT = 0x19A2;
    int EVENT_CALLBACK_USER_PARAM_SOFT = 0x19A3;
    int EVENT_TYPE_BUFFER_COMPLETED_SOFT = 0x19A4;
    int EVENT_TYPE_DISCONNECTED_SOFT = 0x19A6;
    int EVENT_TYPE_SOURCE_STATE_CHANGED_SOFT = 0x19A5;
    int EXPONENT_DISTANCE = 0xD005;
    int EXPONENT_DISTANCE_CLAMPED = 0xD006;
    int EXTENSIONS = 0xB004;
    int EXT_ALAW = 1;
    int EXT_BFORMAT = 1;
    int EXT_FOLDBACK = 1;
    int EXT_IMA4 = 1;
    int EXT_MCFORMATS = 1;
    int EXT_MULAW = 1;
    int EXT_MULAW_BFORMAT = 1;
    int EXT_MULAW_MCFORMATS = 1;
    int EXT_SOURCE_RADIUS = 1;
    int EXT_STATIC_BUFFER = 1;
    int EXT_STEREO_ANGLES = 1;
    int EXT_double = 1;
    int EXT_float32 = 1;
    int EXT_source_distance_model = 1;
    int EXT_vorbis = 1;
    int FALSE = 0;
    int FILTER_BANDPASS = 0x0003;
    int FILTER_EXT = 0x19D1;
    int FILTER_FIRST_PARAMETER = 0x0000;
    int FILTER_HIGHPASS = 0x0002;
    int FILTER_LAST_PARAMETER = 0x8000;
    int FILTER_LOWPASS = 0x0001;
    int FILTER_NULL = 0x0000;
    int FILTER_TYPE = 0x8001;
    int FLANGER_DELAY = 0x0006;
    int FLANGER_DEPTH = 0x0004;
    int FLANGER_FEEDBACK = 0x0005;
    int FLANGER_PHASE = 0x0002;
    int FLANGER_RATE = 0x0003;
    int FLANGER_WAVEFORM = 0x0001;
    int FLOAT_SOFT = 0x1406;
    int FOLDBACK_EVENT_BLOCK = 0x4112;
    int FOLDBACK_EVENT_START = 0x4111;
    int FOLDBACK_EVENT_STOP = 0x4113;
    int FOLDBACK_MODE_MONO = 0x4101;
    int FOLDBACK_MODE_STEREO = 0x4102;
    int FORMAT_51CHN16 = 0x120B;
    int FORMAT_51CHN32 = 0x120C;
    int FORMAT_51CHN8 = 0x120A;
    int FORMAT_51CHN_MULAW = 0x10023;
    int FORMAT_61CHN16 = 0x120E;
    int FORMAT_61CHN32 = 0x120F;
    int FORMAT_61CHN8 = 0x120D;
    int FORMAT_61CHN_MULAW = 0x10024;
    int FORMAT_71CHN16 = 0x1211;
    int FORMAT_71CHN32 = 0x1212;
    int FORMAT_71CHN8 = 0x1210;
    int FORMAT_71CHN_MULAW = 0x10025;
    int FORMAT_BFORMAT2D_16 = 0x20022;
    int FORMAT_BFORMAT2D_8 = 0x20021;
    int FORMAT_BFORMAT2D_FLOAT32 = 0x20023;
    int FORMAT_BFORMAT2D_MULAW = 0x10031;
    int FORMAT_BFORMAT3D_16 = 0x20032;
    int FORMAT_BFORMAT3D_8 = 0x20031;
    int FORMAT_BFORMAT3D_FLOAT32 = 0x20033;
    int FORMAT_BFORMAT3D_MULAW = 0x10032;
    int FORMAT_IMA_ADPCM_MONO16_EXT = 0x10000;
    int FORMAT_IMA_ADPCM_STEREO16_EXT = 0x10001;
    int FORMAT_MONO16 = 0x1101;
    int FORMAT_MONO8 = 0x1100;
    int FORMAT_MONO_ALAW_EXT = 0x10016;
    int FORMAT_MONO_DOUBLE_EXT = 0x10012;
    int FORMAT_MONO_FLOAT32 = 0x10010;
    int FORMAT_MONO_IMA4 = 0x1300;
    int FORMAT_MONO_MSADPCM_SOFT = 0x1302;
    int FORMAT_MONO_MULAW = 0x10014;
    int FORMAT_MONO_MULAW_EXT = 0x10014;
    int FORMAT_QUAD16 = 0x1205;
    int FORMAT_QUAD16_LOKI = 0x10005;
    int FORMAT_QUAD32 = 0x1206;
    int FORMAT_QUAD8 = 0x1204;
    int FORMAT_QUAD8_LOKI = 0x10004;
    int FORMAT_QUAD_MULAW = 0x10021;
    int FORMAT_REAR16 = 0x1208;
    int FORMAT_REAR32 = 0x1209;
    int FORMAT_REAR8 = 0x1207;
    int FORMAT_REAR_MULAW = 0x10022;
    int FORMAT_STEREO16 = 0x1103;
    int FORMAT_STEREO8 = 0x1102;
    int FORMAT_STEREO_ALAW_EXT = 0x10017;
    int FORMAT_STEREO_DOUBLE_EXT = 0x10013;
    int FORMAT_STEREO_FLOAT32 = 0x10011;
    int FORMAT_STEREO_IMA4 = 0x1301;
    int FORMAT_STEREO_MSADPCM_SOFT = 0x1303;
    int FORMAT_STEREO_MULAW = 0x10015;
    int FORMAT_STEREO_MULAW_EXT = 0x10015;
    int FORMAT_UHJ2CHN16_SOFT = 0x19A3;
    int FORMAT_UHJ2CHN8_SOFT = 0x19A2;
    int FORMAT_UHJ2CHN_ALAW_SOFT = 0x19B4;
    int FORMAT_UHJ2CHN_FLOAT32_SOFT = 0x19A4;
    int FORMAT_UHJ2CHN_IMA4_SOFT = 0x19B5;
    int FORMAT_UHJ2CHN_MSADPCM_SOFT = 0x19B6;
    int FORMAT_UHJ2CHN_MULAW_SOFT = 0x19B3;
    int FORMAT_UHJ3CHN16_SOFT = 0x19A6;
    int FORMAT_UHJ3CHN8_SOFT = 0x19A5;
    int FORMAT_UHJ3CHN_ALAW_SOFT = 0x19B8;
    int FORMAT_UHJ3CHN_FLOAT32_SOFT = 0x19A7;
    int FORMAT_UHJ3CHN_MULAW_SOFT = 0x19B7;
    int FORMAT_UHJ4CHN16_SOFT = 0x19A9;
    int FORMAT_UHJ4CHN8_SOFT = 0x19A8;
    int FORMAT_UHJ4CHN_ALAW_SOFT = 0x19BA;
    int FORMAT_UHJ4CHN_FLOAT32_SOFT = 0x19AA;
    int FORMAT_UHJ4CHN_MULAW_SOFT = 0x19B9;
    int FORMAT_VORBIS_EXT = 0x10003;
    int FORMAT_WAVE_EXT = 0x10002;
    int FREQUENCY = 0x2001;
    int FREQUENCY_SHIFTER_FREQUENCY = 0x0001;
    int FREQUENCY_SHIFTER_LEFT_DIRECTION = 0x0002;
    int FREQUENCY_SHIFTER_RIGHT_DIRECTION = 0x0003;
    int FUMA_SOFT = 0x0000;
    int GAIN = 0x100A;
    int GAIN_LIMIT_SOFT = 0x200E;
    int HIGHPASS_GAIN = 0x0001;
    int HIGHPASS_GAINLF = 0x0002;
    int INITIAL = 0x1011;
    int INTERNAL_FORMAT_SOFT = 0x2008;
    int INT_SOFT = 0x1404;
    int INVALID_ENUM = 0xA002;
    int INVALID_NAME = 0xA001;
    int INVALID_OPERATION = 0xA004;
    int INVALID_VALUE = 0xA003;
    int INVERSE_DISTANCE = 0xD001;
    int INVERSE_DISTANCE_CLAMPED = 0xD002;
    int LINEAR_DISTANCE = 0xD003;
    int LINEAR_DISTANCE_CLAMPED = 0xD004;
    int LOKI_IMA_ADPCM_format = 1;
    int LOKI_WAVE_format = 1;
    int LOKI_quadriphonic = 1;
    int LOOPING = 0x1007;
    int LOOP_POINTS_SOFT = 0x2015;
    int LOWPASS_GAIN = 0x0001;
    int LOWPASS_GAINHF = 0x0002;
    int MAX_DEBUG_GROUP_STACK_DEPTH_EXT = 0x19CB;
    int MAX_DEBUG_LOGGED_MESSAGES_EXT = 0x19CA;
    int MAX_DEBUG_MESSAGE_LENGTH_EXT = 0x19C9;
    int MAX_DISTANCE = 0x1023;
    int MAX_GAIN = 0x100E;
    int MAX_LABEL_LENGTH_EXT = 0x19CC;
    int METERS_PER_UNIT = 0x20004;
    int MIN_GAIN = 0x100D;
    int MONO16_SOFT = 0x1101;
    int MONO32F_SOFT = 0x10010;
    int MONO8_SOFT = 0x1100;
    int MONO_SOFT = 0x1500;
    int N3D_SOFT = 0x0002;
    int NONE = 0;
    int NORMAL_SOFT = 0x0000;
    int NO_ERROR = 0;
    int NUM_RESAMPLERS_SOFT = 0x1210;
    int ORIENTATION = 0x100F;
    int OUT_OF_MEMORY = 0xA005;
    int PACK_BLOCK_ALIGNMENT_SOFT = 0x200D;
    int PAUSED = 0x1013;
    int PENDING = 0x2011;
    int PITCH = 0x1003;
    int PITCH_SHIFTER_COARSE_TUNE = 0x0001;
    int PITCH_SHIFTER_FINE_TUNE = 0x0002;
    int PLAYING = 0x1012;
    int POSITION = 0x1004;
    int PROCESSED = 0x2012;
    int QUAD16_SOFT = 0x1205;
    int QUAD32F_SOFT = 0x1206;
    int QUAD8_SOFT = 0x1204;
    int QUAD_SOFT = 0x1503;
    int REAR16_SOFT = 0x1208;
    int REAR32F_SOFT = 0x1209;
    int REAR8_SOFT = 0x1207;
    int REAR_SOFT = 0x1502;
    int REFERENCE_DISTANCE = 0x1020;
    int REMIX_UNMATCHED_SOFT = 0x0002;
    int RENDERER = 0xB003;
    int RESAMPLER_NAME_SOFT = 0x1213;
    int REVERB_AIR_ABSORPTION_GAINHF = 0x000B;
    int REVERB_DECAY_HFLIMIT = 0x000D;
    int REVERB_DECAY_HFRATIO = 0x0006;
    int REVERB_DECAY_TIME = 0x0005;
    int REVERB_DENSITY = 0x0001;
    int REVERB_DIFFUSION = 0x0002;
    int REVERB_GAIN = 0x0003;
    int REVERB_GAINHF = 0x0004;
    int REVERB_LATE_REVERB_DELAY = 0x000A;
    int REVERB_LATE_REVERB_GAIN = 0x0009;
    int REVERB_REFLECTIONS_DELAY = 0x0008;
    int REVERB_REFLECTIONS_GAIN = 0x0007;
    int REVERB_ROOM_ROLLOFF_FACTOR = 0x000C;
    int RING_MODULATOR_FREQUENCY = 0x0001;
    int RING_MODULATOR_HIGHPASS_CUTOFF = 0x0002;
    int RING_MODULATOR_WAVEFORM = 0x0003;
    int ROLLOFF_FACTOR = 0x1021;
    int ROOM_ROLLOFF_FACTOR = 0x20008;
    int SAMPLE_LENGTH_SOFT = 0x200A;
    int SAMPLE_OFFSET = 0x1025;
    int SAMPLE_OFFSET_CLOCK_SOFT = 0x1202;
    int SAMPLE_OFFSET_LATENCY_SOFT = 0x1200;
    int SAMPLE_RW_OFFSETS_SOFT = 0x1032;
    int SEC_LENGTH_SOFT = 0x200B;
    int SEC_OFFSET = 0x1024;
    int SEC_OFFSET_CLOCK_SOFT = 0x1203;
    int SEC_OFFSET_LATENCY_SOFT = 0x1201;
    int SHORT_SOFT = 0x1402;
    int SIZE = 0x2004;
    int SN3D_SOFT = 0x0001;
    int SOFT_MSADPCM = 1;
    int SOFT_bformat_ex = 1;
    int SOFT_block_alignment = 1;
    int SOFT_buffer_length_query = 1;
    int SOFT_buffer_samples = 1;
    int SOFT_buffer_sub_data = 1;
    int SOFT_deferred_updates = 1;
    int SOFT_direct_channels = 1;
    int SOFT_direct_channels_remix = 1;
    int SOFT_events = 1;
    int SOFT_gain_clamp_ex = 1;
    int SOFT_loop_points = 1;
    int SOFT_source_latency = 1;
    int SOFT_source_length = 1;
    int SOURCE_DISTANCE_MODEL = 0x200;
    int SOURCE_EXT = 0x19D0;
    int SOURCE_RADIUS = 0x1031;
    int SOURCE_RELATIVE = 0x202;
    int SOURCE_RESAMPLER_SOFT = 0x1212;
    int SOURCE_SPATIALIZE_SOFT = 0x1214;
    int SOURCE_STATE = 0x1010;
    int SOURCE_TYPE = 0x1027;
    int SPEED_OF_SOUND = 0xC003;
    int STACK_OVERFLOW_EXT = 0x19CD;
    int STACK_UNDERFLOW_EXT = 0x19CE;
    int STATIC = 0x1028;
    int STEREO16_SOFT = 0x1103;
    int STEREO32F_SOFT = 0x10011;
    int STEREO8_SOFT = 0x1102;
    int STEREO_ANGLES = 0x1030;
    int STEREO_MODE_SOFT = 0x19B0;
    int STEREO_SOFT = 0x1501;
    int STOPPED = 0x1014;
    int STREAMING = 0x1029;
    int SUPER_STEREO_SOFT = 0x0001;
    int SUPER_STEREO_WIDTH_SOFT = 0x19B1;
    int TRUE = 1;
    int UNDETERMINED = 0x1030;
    int UNPACK_AMBISONIC_ORDER_SOFT = 0x199D;
    int UNPACK_BLOCK_ALIGNMENT_SOFT = 0x200C;
    int UNSIGNED_BYTE3_SOFT = 0x1409;
    int UNSIGNED_BYTE_SOFT = 0x1401;
    int UNSIGNED_INT_SOFT = 0x1405;
    int UNSIGNED_SHORT_SOFT = 0x1403;
    int UNUSED = 0x2010;
    int VELOCITY = 0x1006;
    int VENDOR = 0xB001;
    int VERSION = 0xB002;
    int VOCAL_MORPHER_PHONEMEA = 0x0001;
    int VOCAL_MORPHER_PHONEMEA_COARSE_TUNING = 0x0002;
    int VOCAL_MORPHER_PHONEMEB = 0x0003;
    int VOCAL_MORPHER_PHONEMEB_COARSE_TUNING = 0x0004;
    int VOCAL_MORPHER_RATE = 0x0006;
    int VOCAL_MORPHER_WAVEFORM = 0x0005;
    float AUTOWAH_DEFAULT_ATTACK_TIME = (0.06f);
    float AUTOWAH_DEFAULT_PEAK_GAIN = (11.22f);
    float AUTOWAH_DEFAULT_RELEASE_TIME = (0.06f);
    float AUTOWAH_DEFAULT_RESONANCE = (1000.0f);
    float AUTOWAH_MAX_ATTACK_TIME = (1.0f);
    float AUTOWAH_MAX_PEAK_GAIN = (31621.0f);
    float AUTOWAH_MAX_RELEASE_TIME = (1.0f);
    float AUTOWAH_MAX_RESONANCE = (1000.0f);
    float AUTOWAH_MIN_ATTACK_TIME = (0.0001f);
    float AUTOWAH_MIN_PEAK_GAIN = (0.00003f);
    float AUTOWAH_MIN_RELEASE_TIME = (0.0001f);
    float AUTOWAH_MIN_RESONANCE = (2.0f);
    float BANDPASS_DEFAULT_GAIN = (1.0f);
    float BANDPASS_DEFAULT_GAINHF = (1.0f);
    float BANDPASS_DEFAULT_GAINLF = (1.0f);
    float BANDPASS_MAX_GAIN = (1.0f);
    float BANDPASS_MAX_GAINHF = (1.0f);
    float BANDPASS_MAX_GAINLF = (1.0f);
    float BANDPASS_MIN_GAIN = (0.0f);
    float BANDPASS_MIN_GAINHF = (0.0f);
    float BANDPASS_MIN_GAINLF = (0.0f);
    float CHORUS_DEFAULT_DELAY = (0.016f);
    float CHORUS_DEFAULT_DEPTH = (0.1f);
    float CHORUS_DEFAULT_FEEDBACK = (0.25f);
    int CHORUS_DEFAULT_PHASE = (90);
    float CHORUS_DEFAULT_RATE = (1.1f);
    int CHORUS_DEFAULT_WAVEFORM = (1);
    float CHORUS_MAX_DELAY = (0.016f);
    float CHORUS_MAX_DEPTH = (1.0f);
    float CHORUS_MAX_FEEDBACK = (1.0f);
    int CHORUS_MAX_PHASE = (180);
    float CHORUS_MAX_RATE = (10.0f);
    int CHORUS_MAX_WAVEFORM = (1);
    float CHORUS_MIN_DELAY = (0.0f);
    float CHORUS_MIN_DEPTH = (0.0f);
    float CHORUS_MIN_FEEDBACK = (-1.0f);
    int CHORUS_MIN_PHASE = (-180);
    float CHORUS_MIN_RATE = (0.0f);
    int CHORUS_MIN_WAVEFORM = (0);
    int CHORUS_WAVEFORM_SINUSOID = (0);
    int CHORUS_WAVEFORM_TRIANGLE = (1);
    int COMPRESSOR_DEFAULT_ONOFF = (1);
    int COMPRESSOR_MAX_ONOFF = (1);
    int COMPRESSOR_MIN_ONOFF = (0);
    float DEFAULT_AIR_ABSORPTION_FACTOR = (0.0f);
    byte DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO = TRUE;
    byte DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO = TRUE;
    float DEFAULT_CONE_OUTER_GAINHF = (1.0f);
    byte DEFAULT_DIRECT_FILTER_GAINHF_AUTO = TRUE;
    float DEFAULT_METERS_PER_UNIT = (1.0f);
    float DEFAULT_ROOM_ROLLOFF_FACTOR = (0.0f);
    float DISTORTION_DEFAULT_EDGE = (0.2f);
    float DISTORTION_DEFAULT_EQBANDWIDTH = (3600.0f);
    float DISTORTION_DEFAULT_EQCENTER = (3600.0f);
    float DISTORTION_DEFAULT_GAIN = (0.05f);
    float DISTORTION_DEFAULT_LOWPASS_CUTOFF = (8000.0f);
    float DISTORTION_MAX_EDGE = (1.0f);
    float DISTORTION_MAX_EQBANDWIDTH = (24000.0f);
    float DISTORTION_MAX_EQCENTER = (24000.0f);
    float DISTORTION_MAX_GAIN = (1.0f);
    float DISTORTION_MAX_LOWPASS_CUTOFF = (24000.0f);
    float DISTORTION_MIN_EDGE = (0.0f);
    float DISTORTION_MIN_EQBANDWIDTH = (80.0f);
    float DISTORTION_MIN_EQCENTER = (80.0f);
    float DISTORTION_MIN_GAIN = (0.01f);
    float DISTORTION_MIN_LOWPASS_CUTOFF = (80.0f);
    float EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF = (0.994f);
    byte EAXREVERB_DEFAULT_DECAY_HFLIMIT = TRUE;
    float EAXREVERB_DEFAULT_DECAY_HFRATIO = (0.83f);
    float EAXREVERB_DEFAULT_DECAY_LFRATIO = (1.0f);
    float EAXREVERB_DEFAULT_DECAY_TIME = (1.49f);
    float EAXREVERB_DEFAULT_DENSITY = (1.0f);
    float EAXREVERB_DEFAULT_DIFFUSION = (1.0f);
    float EAXREVERB_DEFAULT_ECHO_DEPTH = (0.0f);
    float EAXREVERB_DEFAULT_ECHO_TIME = (0.25f);
    float EAXREVERB_DEFAULT_GAIN = (0.32f);
    float EAXREVERB_DEFAULT_GAINHF = (0.89f);
    float EAXREVERB_DEFAULT_GAINLF = (1.0f);
    float EAXREVERB_DEFAULT_HFREFERENCE = (5000.0f);
    float EAXREVERB_DEFAULT_LATE_REVERB_DELAY = (0.011f);
    float EAXREVERB_DEFAULT_LATE_REVERB_GAIN = (1.26f);
    float EAXREVERB_DEFAULT_LATE_REVERB_PAN_XYZ = (0.0f);
    float EAXREVERB_DEFAULT_LFREFERENCE = (250.0f);
    float EAXREVERB_DEFAULT_MODULATION_DEPTH = (0.0f);
    float EAXREVERB_DEFAULT_MODULATION_TIME = (0.25f);
    float EAXREVERB_DEFAULT_REFLECTIONS_DELAY = (0.007f);
    float EAXREVERB_DEFAULT_REFLECTIONS_GAIN = (0.05f);
    float EAXREVERB_DEFAULT_REFLECTIONS_PAN_XYZ = (0.0f);
    float EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR = (0.0f);
    float EAXREVERB_MAX_AIR_ABSORPTION_GAINHF = (1.0f);
    byte EAXREVERB_MAX_DECAY_HFLIMIT = TRUE;
    float EAXREVERB_MAX_DECAY_HFRATIO = (2.0f);
    float EAXREVERB_MAX_DECAY_LFRATIO = (2.0f);
    float EAXREVERB_MAX_DECAY_TIME = (20.0f);
    float EAXREVERB_MAX_DENSITY = (1.0f);
    float EAXREVERB_MAX_DIFFUSION = (1.0f);
    float EAXREVERB_MAX_ECHO_DEPTH = (1.0f);
    float EAXREVERB_MAX_ECHO_TIME = (0.25f);
    float EAXREVERB_MAX_GAIN = (1.0f);
    float EAXREVERB_MAX_GAINHF = (1.0f);
    float EAXREVERB_MAX_GAINLF = (1.0f);
    float EAXREVERB_MAX_HFREFERENCE = (20000.0f);
    float EAXREVERB_MAX_LATE_REVERB_DELAY = (0.1f);
    float EAXREVERB_MAX_LATE_REVERB_GAIN = (10.0f);
    float EAXREVERB_MAX_LFREFERENCE = (1000.0f);
    float EAXREVERB_MAX_MODULATION_DEPTH = (1.0f);
    float EAXREVERB_MAX_MODULATION_TIME = (4.0f);
    float EAXREVERB_MAX_REFLECTIONS_DELAY = (0.3f);
    float EAXREVERB_MAX_REFLECTIONS_GAIN = (3.16f);
    float EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR = (10.0f);
    float EAXREVERB_MIN_AIR_ABSORPTION_GAINHF = (0.892f);
    byte EAXREVERB_MIN_DECAY_HFLIMIT = FALSE;
    float EAXREVERB_MIN_DECAY_HFRATIO = (0.1f);
    float EAXREVERB_MIN_DECAY_LFRATIO = (0.1f);
    float EAXREVERB_MIN_DECAY_TIME = (0.1f);
    float EAXREVERB_MIN_DENSITY = (0.0f);
    float EAXREVERB_MIN_DIFFUSION = (0.0f);
    float EAXREVERB_MIN_ECHO_DEPTH = (0.0f);
    float EAXREVERB_MIN_ECHO_TIME = (0.075f);
    float EAXREVERB_MIN_GAIN = (0.0f);
    float EAXREVERB_MIN_GAINHF = (0.0f);
    float EAXREVERB_MIN_GAINLF = (0.0f);
    float EAXREVERB_MIN_HFREFERENCE = (1000.0f);
    float EAXREVERB_MIN_LATE_REVERB_DELAY = (0.0f);
    float EAXREVERB_MIN_LATE_REVERB_GAIN = (0.0f);
    float EAXREVERB_MIN_LFREFERENCE = (20.0f);
    float EAXREVERB_MIN_MODULATION_DEPTH = (0.0f);
    float EAXREVERB_MIN_MODULATION_TIME = (0.04f);
    float EAXREVERB_MIN_REFLECTIONS_DELAY = (0.0f);
    float EAXREVERB_MIN_REFLECTIONS_GAIN = (0.0f);
    float EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR = (0.0f);
    float ECHO_DEFAULT_DAMPING = (0.5f);
    float ECHO_DEFAULT_DELAY = (0.1f);
    float ECHO_DEFAULT_FEEDBACK = (0.5f);
    float ECHO_DEFAULT_LRDELAY = (0.1f);
    float ECHO_DEFAULT_SPREAD = (-1.0f);
    float ECHO_MAX_DAMPING = (0.99f);
    float ECHO_MAX_DELAY = (0.207f);
    float ECHO_MAX_FEEDBACK = (1.0f);
    float ECHO_MAX_LRDELAY = (0.404f);
    float ECHO_MAX_SPREAD = (1.0f);
    float ECHO_MIN_DAMPING = (0.0f);
    float ECHO_MIN_DELAY = (0.0f);
    float ECHO_MIN_FEEDBACK = (0.0f);
    float ECHO_MIN_LRDELAY = (0.0f);
    float ECHO_MIN_SPREAD = (-1.0f);
    float EQUALIZER_DEFAULT_HIGH_CUTOFF = (6000.0f);
    float EQUALIZER_DEFAULT_HIGH_GAIN = (1.0f);
    float EQUALIZER_DEFAULT_LOW_CUTOFF = (200.0f);
    float EQUALIZER_DEFAULT_LOW_GAIN = (1.0f);
    float EQUALIZER_DEFAULT_MID1_CENTER = (500.0f);
    float EQUALIZER_DEFAULT_MID1_GAIN = (1.0f);
    float EQUALIZER_DEFAULT_MID1_WIDTH = (1.0f);
    float EQUALIZER_DEFAULT_MID2_CENTER = (3000.0f);
    float EQUALIZER_DEFAULT_MID2_GAIN = (1.0f);
    float EQUALIZER_DEFAULT_MID2_WIDTH = (1.0f);
    float EQUALIZER_MAX_HIGH_CUTOFF = (16000.0f);
    float EQUALIZER_MAX_HIGH_GAIN = (7.943f);
    float EQUALIZER_MAX_LOW_CUTOFF = (800.0f);
    float EQUALIZER_MAX_LOW_GAIN = (7.943f);
    float EQUALIZER_MAX_MID1_CENTER = (3000.0f);
    float EQUALIZER_MAX_MID1_GAIN = (7.943f);
    float EQUALIZER_MAX_MID1_WIDTH = (1.0f);
    float EQUALIZER_MAX_MID2_CENTER = (8000.0f);
    float EQUALIZER_MAX_MID2_GAIN = (7.943f);
    float EQUALIZER_MAX_MID2_WIDTH = (1.0f);
    float EQUALIZER_MIN_HIGH_CUTOFF = (4000.0f);
    float EQUALIZER_MIN_HIGH_GAIN = (0.126f);
    float EQUALIZER_MIN_LOW_CUTOFF = (50.0f);
    float EQUALIZER_MIN_LOW_GAIN = (0.126f);
    float EQUALIZER_MIN_MID1_CENTER = (200.0f);
    float EQUALIZER_MIN_MID1_GAIN = (0.126f);
    float EQUALIZER_MIN_MID1_WIDTH = (0.01f);
    float EQUALIZER_MIN_MID2_CENTER = (1000.0f);
    float EQUALIZER_MIN_MID2_GAIN = (0.126f);
    float EQUALIZER_MIN_MID2_WIDTH = (0.01f);
    float FLANGER_DEFAULT_DELAY = (0.002f);
    float FLANGER_DEFAULT_DEPTH = (1.0f);
    float FLANGER_DEFAULT_FEEDBACK = (-0.5f);
    int FLANGER_DEFAULT_PHASE = (0);
    float FLANGER_DEFAULT_RATE = (0.27f);
    int FLANGER_DEFAULT_WAVEFORM = (1);
    float FLANGER_MAX_DELAY = (0.004f);
    float FLANGER_MAX_DEPTH = (1.0f);
    float FLANGER_MAX_FEEDBACK = (1.0f);
    int FLANGER_MAX_PHASE = (180);
    float FLANGER_MAX_RATE = (10.0f);
    int FLANGER_MAX_WAVEFORM = (1);
    float FLANGER_MIN_DELAY = (0.0f);
    float FLANGER_MIN_DEPTH = (0.0f);
    float FLANGER_MIN_FEEDBACK = (-1.0f);
    int FLANGER_MIN_PHASE = (-180);
    float FLANGER_MIN_RATE = (0.0f);
    int FLANGER_MIN_WAVEFORM = (0);
    int FLANGER_WAVEFORM_SINUSOID = (0);
    int FLANGER_WAVEFORM_TRIANGLE = (1);
    float FREQUENCY_SHIFTER_DEFAULT_FREQUENCY = (0.0f);
    int FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION = (0);
    int FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION = (0);
    int FREQUENCY_SHIFTER_DIRECTION_DOWN = (0);
    int FREQUENCY_SHIFTER_DIRECTION_OFF = (2);
    int FREQUENCY_SHIFTER_DIRECTION_UP = (1);
    float FREQUENCY_SHIFTER_MAX_FREQUENCY = (24000.0f);
    int FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION = (2);
    int FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION = (2);
    float FREQUENCY_SHIFTER_MIN_FREQUENCY = (0.0f);
    int FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION = (0);
    int FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION = (0);
    float HIGHPASS_DEFAULT_GAIN = (1.0f);
    float HIGHPASS_DEFAULT_GAINLF = (1.0f);
    float HIGHPASS_MAX_GAIN = (1.0f);
    float HIGHPASS_MAX_GAINLF = (1.0f);
    float HIGHPASS_MIN_GAIN = (0.0f);
    float HIGHPASS_MIN_GAINLF = (0.0f);
    int ILLEGAL_COMMAND = INVALID_OPERATION;
    @Unsigned int ILLEGAL_ENUM = INVALID_ENUM;
    int INVALID = (-1);
    float LOWPASS_DEFAULT_GAIN = (1.0f);
    float LOWPASS_DEFAULT_GAINHF = (1.0f);
    float LOWPASS_MAX_GAIN = (1.0f);
    float LOWPASS_MAX_GAINHF = (1.0f);
    float LOWPASS_MIN_GAIN = (0.0f);
    float LOWPASS_MIN_GAINHF = (0.0f);
    float MAX_AIR_ABSORPTION_FACTOR = (10.0f);
    byte MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO = TRUE;
    byte MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO = TRUE;
    float MAX_CONE_OUTER_GAINHF = (1.0f);
    byte MAX_DIRECT_FILTER_GAINHF_AUTO = TRUE;
    float MAX_METERS_PER_UNIT = Float.MAX_VALUE;
    float MAX_ROOM_ROLLOFF_FACTOR = (10.0f);
    float MIN_AIR_ABSORPTION_FACTOR = (0.0f);
    byte MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO = FALSE;
    byte MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO = FALSE;
    float MIN_CONE_OUTER_GAINHF = (0.0f);
    byte MIN_DIRECT_FILTER_GAINHF_AUTO = FALSE;
    float MIN_METERS_PER_UNIT = Float.MIN_VALUE;
    float MIN_ROOM_ROLLOFF_FACTOR = (0.0f);
    int PITCH_SHIFTER_DEFAULT_COARSE_TUNE = (12);
    int PITCH_SHIFTER_DEFAULT_FINE_TUNE = (0);
    int PITCH_SHIFTER_MAX_COARSE_TUNE = (12);
    int PITCH_SHIFTER_MAX_FINE_TUNE = (50);
    int PITCH_SHIFTER_MIN_COARSE_TUNE = (-12);
    int PITCH_SHIFTER_MIN_FINE_TUNE = (-50);
    float REVERB_DEFAULT_AIR_ABSORPTION_GAINHF = (0.994f);
    byte REVERB_DEFAULT_DECAY_HFLIMIT = TRUE;
    float REVERB_DEFAULT_DECAY_HFRATIO = (0.83f);
    float REVERB_DEFAULT_DECAY_TIME = (1.49f);
    float REVERB_DEFAULT_DENSITY = (1.0f);
    float REVERB_DEFAULT_DIFFUSION = (1.0f);
    float REVERB_DEFAULT_GAIN = (0.32f);
    float REVERB_DEFAULT_GAINHF = (0.89f);
    float REVERB_DEFAULT_LATE_REVERB_DELAY = (0.011f);
    float REVERB_DEFAULT_LATE_REVERB_GAIN = (1.26f);
    float REVERB_DEFAULT_REFLECTIONS_DELAY = (0.007f);
    float REVERB_DEFAULT_REFLECTIONS_GAIN = (0.05f);
    float REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR = (0.0f);
    float REVERB_MAX_AIR_ABSORPTION_GAINHF = (1.0f);
    byte REVERB_MAX_DECAY_HFLIMIT = TRUE;
    float REVERB_MAX_DECAY_HFRATIO = (2.0f);
    float REVERB_MAX_DECAY_TIME = (20.0f);
    float REVERB_MAX_DENSITY = (1.0f);
    float REVERB_MAX_DIFFUSION = (1.0f);
    float REVERB_MAX_GAIN = (1.0f);
    float REVERB_MAX_GAINHF = (1.0f);
    float REVERB_MAX_LATE_REVERB_DELAY = (0.1f);
    float REVERB_MAX_LATE_REVERB_GAIN = (10.0f);
    float REVERB_MAX_REFLECTIONS_DELAY = (0.3f);
    float REVERB_MAX_REFLECTIONS_GAIN = (3.16f);
    float REVERB_MAX_ROOM_ROLLOFF_FACTOR = (10.0f);
    float REVERB_MIN_AIR_ABSORPTION_GAINHF = (0.892f);
    byte REVERB_MIN_DECAY_HFLIMIT = FALSE;
    float REVERB_MIN_DECAY_HFRATIO = (0.1f);
    float REVERB_MIN_DECAY_TIME = (0.1f);
    float REVERB_MIN_DENSITY = (0.0f);
    float REVERB_MIN_DIFFUSION = (0.0f);
    float REVERB_MIN_GAIN = (0.0f);
    float REVERB_MIN_GAINHF = (0.0f);
    float REVERB_MIN_LATE_REVERB_DELAY = (0.0f);
    float REVERB_MIN_LATE_REVERB_GAIN = (0.0f);
    float REVERB_MIN_REFLECTIONS_DELAY = (0.0f);
    float REVERB_MIN_REFLECTIONS_GAIN = (0.0f);
    float REVERB_MIN_ROOM_ROLLOFF_FACTOR = (0.0f);
    float RING_MODULATOR_DEFAULT_FREQUENCY = (440.0f);
    float RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF = (800.0f);
    int RING_MODULATOR_DEFAULT_WAVEFORM = (0);
    float RING_MODULATOR_MAX_FREQUENCY = (8000.0f);
    float RING_MODULATOR_MAX_HIGHPASS_CUTOFF = (24000.0f);
    int RING_MODULATOR_MAX_WAVEFORM = (2);
    float RING_MODULATOR_MIN_FREQUENCY = (0.0f);
    float RING_MODULATOR_MIN_HIGHPASS_CUTOFF = (0.0f);
    int RING_MODULATOR_MIN_WAVEFORM = (0);
    int RING_MODULATOR_SAWTOOTH = (1);
    int RING_MODULATOR_SINUSOID = (0);
    int RING_MODULATOR_SQUARE = (2);
    int VOCAL_MORPHER_DEFAULT_PHONEMEA = (0);
    int VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING = (0);
    int VOCAL_MORPHER_DEFAULT_PHONEMEB = (10);
    int VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING = (0);
    float VOCAL_MORPHER_DEFAULT_RATE = (1.41f);
    int VOCAL_MORPHER_DEFAULT_WAVEFORM = (0);
    int VOCAL_MORPHER_MAX_PHONEMEA = (29);
    int VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING = (24);
    int VOCAL_MORPHER_MAX_PHONEMEB = (29);
    int VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING = (24);
    float VOCAL_MORPHER_MAX_RATE = (10.0f);
    int VOCAL_MORPHER_MAX_WAVEFORM = (2);
    int VOCAL_MORPHER_MIN_PHONEMEA = (0);
    int VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING = (-24);
    int VOCAL_MORPHER_MIN_PHONEMEB = (0);
    int VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING = (-24);
    float VOCAL_MORPHER_MIN_RATE = (0.0f);
    int VOCAL_MORPHER_MIN_WAVEFORM = (0);
    int VOCAL_MORPHER_PHONEME_A = (0);
    int VOCAL_MORPHER_PHONEME_AA = (5);
    int VOCAL_MORPHER_PHONEME_AE = (6);
    int VOCAL_MORPHER_PHONEME_AH = (7);
    int VOCAL_MORPHER_PHONEME_AO = (8);
    int VOCAL_MORPHER_PHONEME_B = (15);
    int VOCAL_MORPHER_PHONEME_D = (16);
    int VOCAL_MORPHER_PHONEME_E = (1);
    int VOCAL_MORPHER_PHONEME_EH = (9);
    int VOCAL_MORPHER_PHONEME_ER = (10);
    int VOCAL_MORPHER_PHONEME_F = (17);
    int VOCAL_MORPHER_PHONEME_G = (18);
    int VOCAL_MORPHER_PHONEME_I = (2);
    int VOCAL_MORPHER_PHONEME_IH = (11);
    int VOCAL_MORPHER_PHONEME_IY = (12);
    int VOCAL_MORPHER_PHONEME_J = (19);
    int VOCAL_MORPHER_PHONEME_K = (20);
    int VOCAL_MORPHER_PHONEME_L = (21);
    int VOCAL_MORPHER_PHONEME_M = (22);
    int VOCAL_MORPHER_PHONEME_N = (23);
    int VOCAL_MORPHER_PHONEME_O = (3);
    int VOCAL_MORPHER_PHONEME_P = (24);
    int VOCAL_MORPHER_PHONEME_R = (25);
    int VOCAL_MORPHER_PHONEME_S = (26);
    int VOCAL_MORPHER_PHONEME_T = (27);
    int VOCAL_MORPHER_PHONEME_U = (4);
    int VOCAL_MORPHER_PHONEME_UH = (13);
    int VOCAL_MORPHER_PHONEME_UW = (14);
    int VOCAL_MORPHER_PHONEME_V = (28);
    int VOCAL_MORPHER_PHONEME_Z = (29);
    int VOCAL_MORPHER_WAVEFORM_SAWTOOTH = (2);
    int VOCAL_MORPHER_WAVEFORM_SINUSOID = (0);
    int VOCAL_MORPHER_WAVEFORM_TRIANGLE = (1);
}
